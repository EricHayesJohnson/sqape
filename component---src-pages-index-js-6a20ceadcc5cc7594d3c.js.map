{"version":3,"sources":["webpack:///./src/components/portfolio/styles.js","webpack:///./src/components/portfolio/portfolio.js","webpack:///./src/pages/index.js"],"names":["ItemBody","size","portfolioWidth","color","skyBlue","s1","black","s2","Title","Story","lightGray","s3","Button","ItemLink","fontSize","textDecoration","fontWeight","PortfolioItem","title","page","mainText","subText","useState","showStory","setShowStory","style","display","justifyContent","alignItems","onClick","to","margin","marginBottom","Portfolio","IndexPage","name","hasHomeLink"],"mappings":"+JAGaA,EAAQ,iEACVC,IAAKC,eADK,eAELC,IAAMC,QAFD,kBAGFH,IAAKI,GAHH,qBAICF,IAAMG,MAJP,YAKRL,IAAKI,GALG,IAKGJ,IAAKM,GALR,kBAMFN,IAAKI,GANH,KAQRG,EAAK,6DACPL,IAAMG,MADC,iBAEAL,IAAKM,GAFL,qBAKLE,EAAK,wHAIPN,IAAMG,MAJC,eAKFH,IAAMO,UALJ,kBAMCT,IAAKI,GANN,qBAOIF,IAAMG,MAPV,YAQLL,IAAKU,GARA,IAQMV,IAAKM,GARX,KAWLK,GADc,kEACR,wGAGGT,IAAMG,MAHT,kBAIAL,IAAKI,GAJL,cAKJJ,IAAKM,GALD,oDAQDN,IAAKM,GARJ,2BAaNM,EAAW,CACtBV,MAAM,GAAIA,IAAMG,MAChBQ,SAAS,GAAIb,IAAKU,GAClBI,eAAgB,OAChBC,WAAY,K,YCvCRC,EAAgB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EAC1BC,oBAAS,GAApCC,EADqD,KAC1CC,EAD0C,KAG5D,OACE,8BACE,YAACxB,EAAD,KACE,mBAAKyB,MAAO,CAAEC,QAAS,OAAQC,eAAgB,kBAC7C,YAACnB,EAAD,KAAQU,GACR,mBAAKO,MAAO,CAAEC,QAAS,OAAQE,WAAY,WACzC,YAAChB,EAAD,CAAQiB,QAAS,kBAAML,GAAcD,KAArC,SACA,YAAC,IAAD,CAAMO,GAAIX,EAAMM,MAAOZ,GAAvB,UAKHU,EACC,YAACd,EAAD,KACE,kBAAIgB,MAAO,CAAEM,OAAQ,IAArB,WACCX,EACD,kBAAIK,MAAO,CAAEO,aAAc,IAA3B,oBACA,uBAAMX,IAEN,QAqDGY,EA/CG,kBAChB,8BACE,YAAC,EAAD,CACEf,MAAM,YACNC,KAAK,YACLC,SAAS,sXAITC,QAAQ,kGAEV,YAAC,EAAD,CACEH,MAAM,cACNC,KAAK,cACLC,SAAS,gTAGTC,QAAQ,2FAEV,YAAC,EAAD,CACEH,MAAM,cACNC,KAAK,cACLC,SAAS,gSAGTC,QAAQ,4KAGV,YAAC,EAAD,CACEH,MAAM,gBACNC,KAAK,gBACLC,SAAS,iRAITC,QAAQ,2H,YCxDCa,UARG,WAChB,OACE,YAAC,IAAD,CAAQC,KAAK,aAAaC,aAAa,GACrC,YAAC,EAAD","file":"component---src-pages-index-js-6a20ceadcc5cc7594d3c.js","sourcesContent":["import styled from '@emotion/styled';\nimport { size, color } from '../../globalStyles/theme';\n\nexport const ItemBody = styled.div`\n  width: ${size.portfolioWidth};\n  background: ${color.skyBlue};\n  border-radius: ${size.s1};\n  border: 1px solid ${color.black};\n  padding: ${size.s1} ${size.s2};\n  margin-bottom: ${size.s1};\n`;\nexport const Title = styled.h1`\n  color: ${color.black};\n  margin-right: ${size.s2};\n  font-weight: 400;\n`;\nexport const Story = styled.div`\n  font-family: Georgia, serif;\n  font-size: 18px;\n  line-height: 28px;\n  color: ${color.black};\n  background: ${color.lightGray};\n  border-radius: ${size.s1};\n  border: 1px solid ${color.black};\n  padding: ${size.s3} ${size.s2};\n`;\nexport const AreaOfInterest = styled.div``;\nexport const Button = styled.button`\n  width: 50px;\n  line-height: 1.5;\n  border: 1px solid ${color.black};\n  border-radius: ${size.s1};\n  font-size: ${size.s2};\n  font-family: inherit;\n  cursor: pointer;\n  margin-right: ${size.s2};\n  :focus {\n    outline: none;\n  }\n`;\nexport const ItemLink = {\n  color: `${color.black}`,\n  fontSize: `${size.s3}`,\n  textDecoration: 'none',\n  fontWeight: 300,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport { ItemBody, Title, Button, Story, ItemLink } from './styles';\n\nconst PortfolioItem = ({ title, page, mainText, subText }) => {\n  const [showStory, setShowStory] = useState(false);\n\n  return (\n    <>\n      <ItemBody>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Title>{title}</Title>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <Button onClick={() => setShowStory(!showStory)}>story</Button>\n            <Link to={page} style={ItemLink}>\n              link\n            </Link>\n          </div>\n        </div>\n        {showStory ? (\n          <Story>\n            <h3 style={{ margin: 0 }}>Summary</h3>\n            {mainText}\n            <h3 style={{ marginBottom: 0 }}>Area of interest</h3>\n            <div>{subText}</div>\n          </Story>\n        ) : null}\n      </ItemBody>\n    </>\n  );\n};\n\nconst Portfolio = () => (\n  <>\n    <PortfolioItem\n      title=\"Inner App\"\n      page=\"/innerApp\"\n      mainText=\"This is envisioned as a mobile app for setting short term goals that can be shared \n      with a group of friends. The full functionality and design is incomplete but still serves as \n      a context to design some user interactions and a custom option select menu. In addition \n      this prototype was used as a means to explore some of the more advanced features of the Emotion library.\"\n      subText=\"Working in the confines of a mobile device fame and using animation to communicate direction.\"\n    />\n    <PortfolioItem\n      title=\"Covid Graph\"\n      page=\"/covidGraph\"\n      mainText=\"I read somewhere that 2020 was the year data visualization entered the mainstream.\n      I imagine in part due to the coronavirus and the many infographics it produced. I decided to dip my toes, \n      but more than anything wanted a reason to play around with D3. Data provided by The COVID Tracking Project API.\"\n      subText=\"How modifying the time range via the slider influences the interpretation of the data.\"\n    />\n    <PortfolioItem\n      title=\"Laundry Day\"\n      page=\"/laundryDay\"\n      mainText=\"This prototype was imagined as a weather app that does one thing, informs the user on whether \n      or not today is a good day to do laundry. Originally it was built using the weatherstack api and the browser's \n      geolocation, but was later scaled back to use a toggle with hard coded values.\"\n      subText=\"Using common components to display information. i.e. using a progress bar to indicate cloud coverage \n      and a loading spinner that resembles a washing machine in motion.\"\n    />\n    <PortfolioItem\n      title=\"Kitchen Timer\"\n      page=\"/kitchenTimer\"\n      mainText=\"Modeled after an actual kitchen timer, it was chosen for its simple design \n      and limited functionality. In order to get the site up and running quickly, I \n      wanted the first component to be relatively easy to design and implement. A timer is\n      usually a good place to start.\"\n      subText=\"How the reset functionality is completely intuitive when holding the physical device but unintuitive when on screen.\"\n    />\n  </>\n);\n\nPortfolioItem.propTypes = {\n  title: PropTypes.string,\n  page: PropTypes.string,\n  mainText: PropTypes.string,\n  subText: PropTypes.string,\n};\n\nexport default Portfolio;\n","import React from 'react';\nimport Portfolio from '../components/portfolio/portfolio';\nimport Layout from '../components/layout';\n\nconst IndexPage = () => {\n  return (\n    <Layout name=\"prototypes\" hasHomeLink={false}>\n      <Portfolio />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}